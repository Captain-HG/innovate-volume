<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.innovatevolume.domain.mapper.EnterpriseMapper">
  <resultMap id="BaseResultMap" type="com.qilinxx.innovatevolume.domain.model.Enterprise">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="admin" jdbcType="VARCHAR" property="admin" />
    <result column="reg_date" jdbcType="BIGINT" property="regDate" />
    <result column="found_date" jdbcType="BIGINT" property="foundDate" />
    <result column="reg_money" jdbcType="DECIMAL" property="regMoney" />
    <result column="reg_addr" jdbcType="VARCHAR" property="regAddr" />
    <result column="contact_addr" jdbcType="VARCHAR" property="contactAddr" />
    <result column="sales" jdbcType="DECIMAL" property="sales" />
    <result column="taxs" jdbcType="DECIMAL" property="taxs" />
    <result column="net_assets" jdbcType="DECIMAL" property="netAssets" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="domain" jdbcType="VARCHAR" property="domain" />
    <result column="identify" jdbcType="VARCHAR" property="identify" />
    <result column="identify_no" jdbcType="VARCHAR" property="identifyNo" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="card_owner" jdbcType="VARCHAR" property="cardOwner" />
    <result column="contacter" jdbcType="VARCHAR" property="contacter" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="contact_email" jdbcType="VARCHAR" property="contactEmail" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_use" jdbcType="CHAR" property="isUse" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, code, admin, reg_date, found_date, reg_money, reg_addr, contact_addr, sales, 
    taxs, net_assets, amount, type, domain, identify, identify_no, detail, bank, card_no, 
    card_owner, contacter, contact_phone, contact_email, remark, is_use, creater, create_time, 
    updater, update_time
  </sql>
  <select id="selectByCode" resultMap="BaseResultMap">
  SELECT * FROM enterprise WHERE code=#{code}
</select>
</mapper>
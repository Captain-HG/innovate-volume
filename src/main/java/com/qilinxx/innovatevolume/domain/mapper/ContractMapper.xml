<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.innovatevolume.domain.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="com.qilinxx.innovatevolume.domain.model.Contract">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="enterprise_id" jdbcType="VARCHAR" property="enterpriseId" />
    <result column="provider_id" jdbcType="VARCHAR" property="providerId" />
    <result column="apply_id" jdbcType="VARCHAR" property="applyId" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="voumoney" jdbcType="DECIMAL" property="voumoney" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="start_date" jdbcType="BIGINT" property="startDate" />
    <result column="sign_date" jdbcType="BIGINT" property="signDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_use" jdbcType="CHAR" property="isUse" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, enterprise_id, provider_id, apply_id, money, name, path, voumoney, type, start_date, 
    sign_date, remark, is_use, creater, create_time, updater, update_time
  </sql>
  <select id="selectAllByProviderId" resultMap="BaseResultMap">
  SELECT * FROM contract WHERE provider_id=#{id}
</select>
  <select id="selectAllByEnterpriseId" resultMap="BaseResultMap">
  SELECT * FROM contract WHERE enterprise_id=#{id}
</select>
</mapper>